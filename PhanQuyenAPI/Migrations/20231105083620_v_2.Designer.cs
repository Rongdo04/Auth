// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhanQuyenAPI.Models;

#nullable disable

namespace PhanQuyenAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231105083620_v_2")]
    partial class v_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PhanQuyenAPI.Models.Accounts", b =>
                {
                    b.Property<int>("AccountsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountsID"));

                    b.Property<int>("DecentralizationsID")
                        .HasColumnType("int");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetPasswordTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AccountsID");

                    b.HasIndex("DecentralizationsID");

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("PhanQuyenAPI.Models.Decentralizations", b =>
                {
                    b.Property<int>("DecentralizationsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DecentralizationsID"));

                    b.Property<string>("AuthorityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DecentralizationsID");

                    b.ToTable("Decentralization");
                });

            modelBuilder.Entity("PhanQuyenAPI.Models.Accounts", b =>
                {
                    b.HasOne("PhanQuyenAPI.Models.Decentralizations", "decentralizations")
                        .WithMany()
                        .HasForeignKey("DecentralizationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("decentralizations");
                });
#pragma warning restore 612, 618
        }
    }
}
